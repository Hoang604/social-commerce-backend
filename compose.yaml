name: backend
services:
  core:
    build: .
    ports:
      - '3000:3000'
      - '9229:9229'
    depends_on:
      - db
      - redis
      - localstack
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules
    environment:
      PSQL_HOST: db
      PSQL_PORT: 5432
      PSQL_PASSWORD: ${PSQL_PASSWORD}
      PSQL_USER: ${PSQL_USER}
      PSQL_DATABASE: ${PSQL_DATABASE}
      REDIS_HOST: redis
      REDIS_PORT: 6379

      JWT_SECRET: ${JWT_SECRET}
      JWT_EXPIRES_IN: ${JWT_EXPIRES_IN}
      JWT_REFRESH_SECRET: ${JWT_REFRESH_SECRET}
      JWT_REFRESH_EXPIRES_IN: ${JWT_REFRESH_EXPIRES_IN}

      TWO_FACTOR_AUTH_JWT_SECRET: ${TWO_FACTOR_AUTH_JWT_SECRET}
      TWO_FACTOR_AUTH_JWT_EXPIRES_IN: ${TWO_FACTOR_AUTH_JWT_EXPIRES_IN}

      TWO_FACTOR_APP_NAME: ${TWO_FACTOR_APP_NAME}
      API_BASE_URL: ${API_BASE_URL}
      NODE_ENV: ${NODE_ENV}

      GOOGLE_CLIENT_ID: ${GOOGLE_CLIENT_ID}
      GOOGLE_CLIENT_SECRET: ${GOOGLE_CLIENT_SECRET}
      ENCRYPTION_KEY: ${ENCRYPTION_KEY}

      FRONTEND_URL: ${FRONTEND_URL}

      FRONTEND_AUTH_CALLBACK_URL: ${FRONTEND_AUTH_CALLBACK_URL}

      FRONTEND_2FA_URL: ${FRONTEND_2FA_URL}

      AWS_REGION: ${AWS_REGION}
      AWS_ACCESS_KEY_ID: ${AWS_ACCESS_KEY_ID}
      AWS_SECRET_ACCESS_KEY: ${AWS_SECRET_ACCESS_KEY}

      AWS_SQS_ENDPOINT: http://localstack:4566
      AWS_SQS_QUEUE_URL: ${AWS_SQS_QUEUE_URL}

      AWS_SQS_QUEUE_NAME: ${AWS_SQS_QUEUE_NAME}
      MAIL_APP_PASSWORD: ${MAIL_APP_PASSWORD}
      MAIL_USER: ${MAIL_USER}

  worker:
    build: .
    command: ['npm', 'run', 'dev:worker']
    environment:
      PSQL_HOST: db
      PSQL_USER: ${PSQL_USER}
      PSQL_PASSWORD: ${PSQL_PASSWORD}
      PSQL_DATABASE: ${PSQL_DATABASE}
      PSQL_PORT: 5432
      REDIS_HOST: redis
      REDIS_PORT: 6379

      AWS_REGION: ${AWS_REGION}
      AWS_ACCESS_KEY_ID: ${AWS_ACCESS_KEY_ID}
      AWS_SECRET_ACCESS_KEY: ${AWS_SECRET_ACCESS_KEY}
      AWS_SQS_ENDPOINT: http://localstack:4566
      AWS_SQS_QUEUE_URL: ${AWS_SQS_QUEUE_URL}
      AWS_SQS_QUEUE_NAME: ${AWS_SQS_QUEUE_NAME}

    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules
    depends_on:
      - db
      - localstack
      - redis
    restart: unless-stopped

  db:
    image: 'postgres:13-alpine'
    ports:
      - '5433:5432'
    environment:
      POSTGRES_USER: ${PSQL_USER}
      POSTGRES_PASSWORD: ${PSQL_PASSWORD}
      POSTGRES_DB: ${PSQL_DATABASE}
    volumes:
      - db_data:/var/lib/postgresql/data

  redis:
    image: 'redis:alpine'
    volumes:
      - redis_data:/data

  localstack:
    image: localstack/localstack:latest
    environment:
      - SERVICES=sqs
      - DEBUG=1
      - LOCALSTACK_HOST=localstack
    volumes:
      - ./localstack-init:/etc/localstack/init/ready.d
      - '/var/run/docker.sock:/var/run/docker.sock'

volumes:
  redis_data:
  db_data:
